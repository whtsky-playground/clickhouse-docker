name: Build clickhouse image
env:
  VERSION: "v20.12.3.3-stable"
on:
  push:
    branches:
jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ env.VERSION }}@${{ github.ref }}
          draft: true
          prerelease: false

  build:
    needs: create_release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - compiler: clang-11
            arch: amd64
          - compiler: clang-11-aarch64
            arch: arm64
    steps:
      - name: Maximize build disk space
        uses: whtsky/maximize-build-space@234e01f22ff43e7f71d76bd54b2b96e664608f2d
        with:
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Get clickhouse code
        run: |
          git clone https://github.com/ClickHouse/ClickHouse.git
          cd ClickHouse
          git checkout ${{ env.VERSION }}
          git submodule update --init --recursive
      - name: Cache ccache
        uses: actions/cache@v2
        env:
          cache-name: ccache
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.compiler }}-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.compiler }}-${{ env.VERSION }}
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.compiler }}
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Build clickhouse binary
        run: |
          cd ClickHouse/docker/packager/
          mkdir dist_${{ matrix.arch }}
          ./packager --package-type binary --output-dir dist_${{ matrix.arch }}/ --compiler ${{ matrix.compiler }}
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ClickHouse/docker/packager/dist_${{ matrix.arch }}/clickhouse
      - id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ClickHouse/docker/packager/dist_${{ matrix.arch }}/clickhouse
          asset_name: clickhouse-${{ matrix.arch }}
